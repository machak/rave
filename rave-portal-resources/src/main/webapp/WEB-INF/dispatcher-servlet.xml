<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:oxm="http://www.springframework.org/schema/oxm"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd">

    <!--
    Scans the classpath of this application for @Components to deploy as beans
    NOTE: only the controllers (api and controller packages) are scanned here in dispatcher-servlet.xml. All other
    org.apache.rave.portal.web.<packages> are scanned in web-applicationContext.xml.  This is to prevent duplicate
    bean scanning of o.a.r.p.web.* components which can cause problems.
    -->
    <context:component-scan base-package="org.apache.rave.portal.web.controller"/>
    <context:component-scan base-package="org.apache.rave.portal.web.api"/>

    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven/>
    <mvc:interceptors>
        <bean class="org.apache.rave.portal.web.interceptors.CommonModelHandlerInterceptor"/>
        <!--
            On pre-handle, resolve the device that originated the web
            request and put that information into the ServletRequest object.
            By default it will use the LiteDeviceResolver which only
            gives you very basic information, basically "is this a
            mobile device or not?".  A more advanced WurflDeviceResolver
            can be used if you need to get more detailed information about
            the device such as manufacturer, model, screen size, etc.
        -->
        <bean class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor" />
    </mvc:interceptors>

    <!-- Forwards requests to the "/" resource to the "page" view -->
    <mvc:view-controller path="/" view-name="page"/>

    <!-- Resolves view names to protected .jsp resources within the /WEB-INF/views directory -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <oxm:jaxb2-marshaller id="marshaller">
        <oxm:class-to-be-bound name="org.apache.rave.portal.model.Page"/>
        <oxm:class-to-be-bound name="org.apache.rave.portal.model.RegionWidgetPreference"/>
        <oxm:class-to-be-bound name="org.apache.rave.portal.web.model.RegionWidgetPreferenceListWrapper"/>
    </oxm:jaxb2-marshaller>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <bean class="org.springframework.http.MediaType">
                                <constructor-arg index="0" value="text"/>
                                <constructor-arg index="1" value="plain"/>
                                <constructor-arg index="2" value="UTF-8"/>
                            </bean>
                            <bean class="org.springframework.http.MediaType">
                                <constructor-arg index="0" value="text"/>
                                <constructor-arg index="1" value="javascript"/>
                                <constructor-arg index="2" value="UTF-8"/>
                            </bean>
                        </list>
                    </property>
                </bean>
                <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter"
                      p:marshaller-ref="marshaller" p:unmarshaller-ref="marshaller"/>
            </list>
        </property>
    </bean>
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles-defs.xml</value>
            </list>
        </property>
    </bean>

    <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="0">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
    </bean>

</beans>
